# IDL for Jubatus Classifier

# include "fv_converter.idl"

message string_rule {
  0: string key
  1: string type
  2: string sample_weight
  3: string global_weight
}

message filter_rule {
  0: string key
  1: string type
  2: string suffix
}

message num_rule {
  0: string key
  1: string type
}

type param_t = map<string, string>

message converter_config {
  0: map<string, param_t> string_filter_types
  1: list<filter_rule>    string_filter_rules
  2: map<string, param_t> num_filter_types
  3: list<filter_rule>    num_filter_rules
  4: map<string, param_t> string_types
  5: list<string_rule>    string_rules
  6: map<string, param_t> num_types
  7: list<num_rule>       num_rules
}

message config_data {
  0: string method
  1: converter_config converter
}

message datum {
  0: list<tuple<string, string>> sv
  1: list<tuple<string, double>> nv
}

message estimate_result {
  0: string label
  1: double prob
}

exception config_not_set {
  0: string message
}

service classifier:1 {
  config_data get_config()
  void set_config(0: config_data conf)

  void train(0: list<pair<string, datum>> data)
  list<list<estimate_result>> classify(0: list<datum> data)

  bool save(0: string a, 1: string b)
  bool load(0: string a, 1: string b)

  map<string, string> get_status()
}
