import Options

def options(opt):
  pass

def configure(conf):
  conf.check_cxx(lib = 'crypt', mandatory = True)
  conf.check_cxx(function_name = 'crypt', header_name = 'unistd.h', mandatory = True)
  conf.check_cxx(header_name = 'sys/socket.h net/if.h sys/ioctl.h', mandatory = True)
  conf.check_cxx(header_name = 'netinet/in.h arpa/inet.h', mandatory = True)

def build(bld):
  src = 'util.cpp key_manager.cpp vector_util.cpp'
  if bld.env.HAVE_ZOOKEEPER_H:
    src += ' zk.cpp membership.cpp cht.cpp lock_service.cpp'

  bld.shlib(
    source = src,
    target = 'jubacommon',
    includes = '.',
    use = 'PFICOMMON GLOG ZOOKEEPER_MT CRYPT'
    )

  test_src = [
    'key_manager_test.cpp',
    'util_test.cpp',
    'vector_util_test.cpp',
    ]
  if bld.env.HAVE_ZOOKEEPER_H:
    test_src += ['membership_test.cpp', 'cht_test.cpp']
    
  def make_test(s):
    bld.program(
      features = 'gtest',
      source = s,
      target = s[0:s.rfind('.')],
      includes = '.',
      use = 'jubacommon'
      )
  map(make_test, test_src)

  bld.install_files('${PREFIX}/include/jubatus/common/', bld.path.ant_glob('*.hpp'))
